{"version":3,"file":"esm.min.js","sources":["../src/InfoBox.tsx"],"sourcesContent":["/* global google */\n/* eslint-disable filenames/match-regex */\nimport { InfoBoxOptions } from './types'\n\nexport class InfoBox {\n  content: string | Node\n  disableAutoPan: boolean\n  maxWidth: number\n  pixelOffset: google.maps.Size\n  position: google.maps.LatLng\n  zIndex: number | undefined | null\n  boxClass: string\n  boxStyle: {\n    [key: string]: any\n  }\n\n  closeBoxMargin: string\n  closeBoxURL: string\n  infoBoxClearance: google.maps.Size\n  isHidden: boolean\n  alignBottom: boolean\n  pane: keyof google.maps.MapPanes\n  enableEventPropagation: boolean\n  div: HTMLDivElement | null\n  closeListener: google.maps.MapsEventListener | null\n  moveListener: google.maps.MapsEventListener | null\n  mapListener: google.maps.MapsEventListener | null\n  contextListener: google.maps.MapsEventListener | null\n  eventListeners: google.maps.MapsEventListener[] | null\n  fixedWidthSet: boolean | null\n\n  constructor(options: InfoBoxOptions = {}) {\n    this.extend(InfoBox, google.maps.OverlayView)\n\n    // Standard options (in common with google.maps.InfoWindow):\n    this.content = options.content || ''\n    this.disableAutoPan = options.disableAutoPan || false\n    this.maxWidth = options.maxWidth || 0\n    this.pixelOffset = options.pixelOffset || new google.maps.Size(0, 0)\n    this.position = options.position || new google.maps.LatLng(0, 0)\n    this.zIndex = options.zIndex || null\n\n    // Additional options (unique to InfoBox):\n    this.boxClass = options.boxClass || 'infoBox'\n    this.boxStyle = options.boxStyle || {}\n    this.closeBoxMargin = options.closeBoxMargin || '2px'\n    this.closeBoxURL = options.closeBoxURL || 'http://www.google.com/intl/en_us/mapfiles/close.gif'\n    if (options.closeBoxURL === '') {\n      this.closeBoxURL = ''\n    }\n    this.infoBoxClearance = options.infoBoxClearance || new google.maps.Size(1, 1)\n\n    if (typeof options.visible === 'undefined') {\n      if (typeof options.isHidden === 'undefined') {\n        options.visible = true\n      } else {\n        options.visible = !options.isHidden\n      }\n    }\n\n    this.isHidden = !options.visible\n\n    this.alignBottom = options.alignBottom || false\n    this.pane = options.pane || 'floatPane'\n    this.enableEventPropagation = options.enableEventPropagation || false\n\n    this.div = null\n    this.closeListener = null\n    this.moveListener = null\n    this.mapListener = null\n    this.contextListener = null\n    this.eventListeners = null\n    this.fixedWidthSet = null\n  }\n\n  createInfoBoxDiv(): void {\n    // This handler prevents an event in the InfoBox from being passed on to the map.\n    function cancelHandler(event: Event) {\n      event.cancelBubble = true\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n    }\n\n    // This handler ignores the current event in the InfoBox and conditionally prevents\n    // the event from being passed on to the map. It is used for the contextmenu event.\n    const ignoreHandler = (event: Event) => {\n      event.returnValue = false\n\n      if (event.preventDefault) {\n        event.preventDefault()\n      }\n\n      if (!this.enableEventPropagation) {\n        cancelHandler(event)\n      }\n    }\n\n    if (!this.div) {\n      this.div = document.createElement('div')\n      this.setBoxStyle()\n\n      if (typeof this.content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + this.content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(this.content)\n      }\n\n      const panes = (this as unknown as google.maps.OverlayView).getPanes()\n\n      if (panes !== null) {\n        panes[this.pane].appendChild(this.div) // Add the InfoBox div to the DOM\n      }\n\n      this.addClickHandler()\n\n      if (this.div.style.width) {\n        this.fixedWidthSet = true\n      } else {\n        if (this.maxWidth !== 0 && this.div.offsetWidth > this.maxWidth) {\n          this.div.style.width = this.maxWidth + 'px'\n          this.fixedWidthSet = true\n        } else {\n          // The following code is needed to overcome problems with MSIE\n          const bw = this.getBoxWidths()\n          this.div.style.width = this.div.offsetWidth - bw.left - bw.right + 'px'\n          this.fixedWidthSet = false\n        }\n      }\n\n      this.panBox(this.disableAutoPan)\n\n      if (!this.enableEventPropagation) {\n        this.eventListeners = []\n\n        // Cancel event propagation.\n        // Note: mousemove not included (to resolve Issue 152)\n        const events = [\n          'mousedown',\n          'mouseover',\n          'mouseout',\n          'mouseup',\n          'click',\n          'dblclick',\n          'touchstart',\n          'touchend',\n          'touchmove',\n        ]\n\n        for (let i = 0; i < events.length; i++) {\n          this.eventListeners.push(\n            google.maps.event.addListener(this.div, events[i], cancelHandler)\n          )\n        }\n\n        // Workaround for Google bug that causes the cursor to change to a pointer\n        // when the mouse moves over a marker underneath InfoBox.\n        this.eventListeners.push(\n          google.maps.event.addListener(\n            this.div,\n            'mouseover',\n            () => {\n              if (this.div) {\n                this.div.style.cursor = 'default'\n              }\n            }\n          )\n        )\n      }\n\n      this.contextListener = google.maps.event.addListener(\n        this.div,\n        'contextmenu',\n        ignoreHandler\n      )\n\n      /**\n       * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\n       * @name InfoBox#domready\n       * @event\n       */\n      google.maps.event.trigger(this, 'domready')\n    }\n  }\n\n  getCloseBoxImg(): string {\n    let img = ''\n\n    if (this.closeBoxURL !== '') {\n      img = '<img alt=\"\"'\n      img += ' aria-hidden=\"true\"'\n      img += \" src='\" + this.closeBoxURL + \"'\"\n      img += ' align=right' // Do this because Opera chokes on style='float: right;'\n      img += \" style='\"\n      img += ' position: relative;' // Required by MSIE\n      img += ' cursor: pointer;'\n      img += ' margin: ' + this.closeBoxMargin + ';'\n      img += \"'>\"\n    }\n\n    return img\n  }\n\n  addClickHandler(): void {\n    if (this.div && this.div.firstChild && this.closeBoxURL !== '') {\n      const closeBox = this.div.firstChild\n      this.closeListener = google.maps.event.addListener(\n        closeBox,\n        'click',\n        this.getCloseClickHandler()\n      )\n    } else {\n      this.closeListener = null\n    }\n  }\n\n  getCloseClickHandler() {\n    return (event: Event) => {\n      // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n      event.cancelBubble = true\n\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n\n      /**\n       * This event is fired when the InfoBox's close box is clicked.\n       * @name InfoBox#closeclick\n       * @event\n       */\n      google.maps.event.trigger(this, 'closeclick')\n\n      this.close()\n    }\n  }\n\n  panBox(disablePan?: boolean | undefined): void {\n    if (this.div && !disablePan) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n\n      // Only pan if attached to map, not panorama\n      if (map instanceof google.maps.Map) {\n        let xOffset = 0\n        let yOffset = 0\n\n        const bounds = map.getBounds()\n        if (bounds && !bounds.contains(this.position)) {\n          // Marker not in visible area of map, so set center\n          // of map to the marker position first.\n          map.setCenter(this.position)\n        }\n\n        const mapDiv = map.getDiv()\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const mapWidth = mapDiv.offsetWidth\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const mapHeight = mapDiv.offsetHeight\n        const iwOffsetX = this.pixelOffset.width\n        const iwOffsetY = this.pixelOffset.height\n        const iwWidth = this.div.offsetWidth\n        const iwHeight = this.div.offsetHeight\n        const padX = this.infoBoxClearance.width\n        const padY = this.infoBoxClearance.height\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const projection: google.maps.MapCanvasProjection = this.getProjection()\n        const pixPosition = projection.fromLatLngToContainerPixel(this.position)\n\n        if (pixPosition !== null) {\n          if (pixPosition.x < -iwOffsetX + padX) {\n            xOffset = pixPosition.x + iwOffsetX - padX\n          } else if (pixPosition.x + iwWidth + iwOffsetX + padX > mapWidth) {\n            xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth\n          }\n\n          if (this.alignBottom) {\n            if (pixPosition.y < -iwOffsetY + padY + iwHeight) {\n              yOffset = pixPosition.y + iwOffsetY - padY - iwHeight\n            } else if (pixPosition.y + iwOffsetY + padY > mapHeight) {\n              yOffset = pixPosition.y + iwOffsetY + padY - mapHeight\n            }\n          } else {\n            if (pixPosition.y < -iwOffsetY + padY) {\n              yOffset = pixPosition.y + iwOffsetY - padY\n            } else if (pixPosition.y + iwHeight + iwOffsetY + padY > mapHeight) {\n              yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight\n            }\n          }\n        }\n\n        if (!(xOffset === 0 && yOffset === 0)) {\n          // Move the map to the shifted center.\n          map.panBy(xOffset, yOffset)\n        }\n      }\n    }\n  }\n\n  setBoxStyle(): void {\n    if (this.div) {\n      // Apply style values from the style sheet defined in the boxClass parameter:\n      this.div.className = this.boxClass\n\n      // Clear existing inline style values:\n      this.div.style.cssText = ''\n\n      // Apply style values defined in the boxStyle parameter:\n      const boxStyle = this.boxStyle\n      for (const i in boxStyle) {\n\n        if (Object.prototype.hasOwnProperty.call(boxStyle, i)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          this.div.style[i] = boxStyle[i]\n        }\n      }\n\n      // Fix for iOS disappearing InfoBox problem\n      // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n      this.div.style.webkitTransform = 'translateZ(0)'\n\n      // Fix up opacity style for benefit of MSIE\n      if (typeof this.div.style.opacity !== 'undefined' && this.div.style.opacity !== '') {\n        // See http://www.quirksmode.org/css/opacity.html\n        const opacity = parseFloat(this.div.style.opacity || '')\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.div.style.msFilter =\n          '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + opacity * 100 + ')\"'\n        this.div.style.filter = 'alpha(opacity=' + opacity * 100 + ')'\n      }\n\n      // Apply required styles\n      this.div.style.position = 'absolute'\n      this.div.style.visibility = 'hidden'\n      if (this.zIndex !== null) {\n        this.div.style.zIndex = this.zIndex + ''\n      }\n      if (!this.div.style.overflow) {\n        this.div.style.overflow = 'auto'\n      }\n    }\n  }\n\n  getBoxWidths(): { bottom: number; left: number; right: number; top: number } {\n    const bw = { top: 0, bottom: 0, left: 0, right: 0 }\n\n    if (!this.div) {\n      return bw\n    }\n\n    if (document.defaultView) {\n      const ownerDocument = this.div.ownerDocument\n      const computedStyle =\n        ownerDocument && ownerDocument.defaultView\n          ? ownerDocument.defaultView.getComputedStyle(this.div, '')\n          : null\n\n      if (computedStyle) {\n        // The computed styles are always in pixel units (good!)\n        bw.top = parseInt(computedStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(computedStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(computedStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(computedStyle.borderRightWidth || '', 10) || 0\n      }\n    } else if (\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      document.documentElement.currentStyle // MSIE\n    ) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const currentStyle = this.div.currentStyle\n\n      if (currentStyle) {\n        // The current styles may not be in pixel units, but assume they are (bad!)\n        bw.top = parseInt(currentStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(currentStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(currentStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(currentStyle.borderRightWidth || '', 10) || 0\n      }\n    }\n\n    return bw\n  }\n\n  onRemove(): void {\n    if (this.div && this.div.parentNode) {\n      this.div.parentNode.removeChild(this.div)\n      this.div = null\n    }\n  }\n\n  draw(): void {\n    this.createInfoBoxDiv()\n\n    if (this.div) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const projection: google.maps.MapCanvasProjection = this.getProjection()\n\n      const pixPosition = projection.fromLatLngToDivPixel(this.position)\n\n      if (pixPosition !== null) {\n        this.div.style.left = pixPosition.x + this.pixelOffset.width + 'px'\n\n        if (this.alignBottom) {\n          this.div.style.bottom = -(pixPosition.y + this.pixelOffset.height) + 'px'\n        } else {\n          this.div.style.top = pixPosition.y + this.pixelOffset.height + 'px'\n        }\n      }\n\n      if (this.isHidden) {\n        this.div.style.visibility = 'hidden'\n      } else {\n        this.div.style.visibility = 'visible'\n      }\n    }\n  }\n\n  setOptions(options: InfoBoxOptions = {}): void {\n    if (typeof options.boxClass !== 'undefined') {\n      // Must be first\n      this.boxClass = options.boxClass\n      this.setBoxStyle()\n    }\n    if (typeof options.boxStyle !== 'undefined') {\n      // Must be second\n      this.boxStyle = options.boxStyle\n      this.setBoxStyle()\n    }\n    if (typeof options.content !== 'undefined') {\n      this.setContent(options.content)\n    }\n    if (typeof options.disableAutoPan !== 'undefined') {\n      this.disableAutoPan = options.disableAutoPan\n    }\n    if (typeof options.maxWidth !== 'undefined') {\n      this.maxWidth = options.maxWidth\n    }\n    if (typeof options.pixelOffset !== 'undefined') {\n      this.pixelOffset = options.pixelOffset\n    }\n    if (typeof options.alignBottom !== 'undefined') {\n      this.alignBottom = options.alignBottom\n    }\n    if (typeof options.position !== 'undefined') {\n      this.setPosition(options.position)\n    }\n    if (typeof options.zIndex !== 'undefined') {\n      this.setZIndex(options.zIndex)\n    }\n    if (typeof options.closeBoxMargin !== 'undefined') {\n      this.closeBoxMargin = options.closeBoxMargin\n    }\n    if (typeof options.closeBoxURL !== 'undefined') {\n      this.closeBoxURL = options.closeBoxURL\n    }\n    if (typeof options.infoBoxClearance !== 'undefined') {\n      this.infoBoxClearance = options.infoBoxClearance\n    }\n    if (typeof options.isHidden !== 'undefined') {\n      this.isHidden = options.isHidden\n    }\n    if (typeof options.visible !== 'undefined') {\n      this.isHidden = !options.visible\n    }\n    if (typeof options.enableEventPropagation !== 'undefined') {\n      this.enableEventPropagation = options.enableEventPropagation\n    }\n\n    if (this.div) {\n      this.draw()\n    }\n  }\n\n  setContent(content: string | Node): void {\n    this.content = content\n\n    if (this.div) {\n      if (this.closeListener) {\n        google.maps.event.removeListener(this.closeListener)\n        this.closeListener = null\n      }\n\n      // Odd code required to make things work with MSIE.\n      if (!this.fixedWidthSet) {\n        this.div.style.width = ''\n      }\n\n      if (typeof content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(content)\n      }\n\n      // Perverse code required to make things work with MSIE.\n      // (Ensures the close box does, in fact, float to the right.)\n      if (!this.fixedWidthSet) {\n        this.div.style.width = this.div.offsetWidth + 'px'\n        if (typeof content === 'string') {\n          this.div.innerHTML = this.getCloseBoxImg() + content\n        } else {\n          this.div.innerHTML = this.getCloseBoxImg()\n          this.div.appendChild(content)\n        }\n      }\n\n      this.addClickHandler()\n    }\n\n    /**\n     * This event is fired when the content of the InfoBox changes.\n     * @name InfoBox#content_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'content_changed')\n  }\n\n  setPosition(latLng: google.maps.LatLng): void {\n    this.position = latLng\n\n    if (this.div) {\n      this.draw()\n    }\n\n    /**\n     * This event is fired when the position of the InfoBox changes.\n     * @name InfoBox#position_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'position_changed')\n  }\n\n  setVisible(isVisible: boolean): void {\n    this.isHidden = !isVisible\n    if (this.div) {\n      this.div.style.visibility = this.isHidden ? 'hidden' : 'visible'\n    }\n  }\n\n  setZIndex(index: number): void {\n    this.zIndex = index\n\n    if (this.div) {\n      this.div.style.zIndex = index + ''\n    }\n\n    /**\n     * This event is fired when the zIndex of the InfoBox changes.\n     * @name InfoBox#zindex_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'zindex_changed')\n  }\n\n  getContent(): string | Node {\n    return this.content\n  }\n\n  getPosition(): google.maps.LatLng {\n    return this.position\n  }\n\n  getZIndex(): number | null | undefined {\n    return this.zIndex\n  }\n\n  getVisible(): boolean {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n\n    let isVisible\n\n    if (typeof map === 'undefined' || map === null) {\n      isVisible = false\n    } else {\n      isVisible = !this.isHidden\n    }\n\n    return isVisible\n  }\n\n  show(): void {\n    this.isHidden = false\n    if (this.div) {\n      this.div.style.visibility = 'visible'\n    }\n  }\n\n  hide(): void {\n    this.isHidden = true\n    if (this.div) {\n      this.div.style.visibility = 'hidden'\n    }\n  }\n\n  open(\n    map: google.maps.Map | google.maps.StreetViewPanorama,\n    anchor?: google.maps.MVCObject\n  ): void {\n    if (anchor) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.position = anchor.getPosition()\n\n      this.moveListener = google.maps.event.addListener(\n        anchor,\n        'position_changed',\n        () => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          const position = anchor.getPosition()\n\n          this.setPosition(position)\n        }\n      )\n\n      this.mapListener = google.maps.event.addListener(\n        anchor,\n        'map_changed',\n        () => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          this.setMap(anchor.map)\n        }\n      )\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.setMap(map)\n\n    if (this.div) {\n      this.panBox()\n    }\n  }\n\n  close() {\n    if (this.closeListener) {\n      google.maps.event.removeListener(this.closeListener)\n      this.closeListener = null\n    }\n\n    if (this.eventListeners) {\n      for (let i = 0; i < this.eventListeners.length; i++) {\n        google.maps.event.removeListener(this.eventListeners[i])\n      }\n      this.eventListeners = null\n    }\n\n    if (this.moveListener) {\n      google.maps.event.removeListener(this.moveListener)\n      this.moveListener = null\n    }\n\n    if (this.mapListener) {\n      google.maps.event.removeListener(this.mapListener)\n      this.mapListener = null\n    }\n\n    if (this.contextListener) {\n      google.maps.event.removeListener(this.contextListener)\n      this.contextListener = null\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.setMap(null)\n  }\n\n  extend<A extends typeof InfoBox>(obj1: A, obj2: typeof google.maps.OverlayView): A {\n    return function applyExtend(this: A, object: typeof google.maps.OverlayView): A {\n      for (const property in object.prototype) {\n        if (!Object.prototype.hasOwnProperty.call(this, property)) {\n          (this.prototype as unknown as  google.maps.OverlayView).set(property, object.prototype.get(property))\n        }\n      }\n\n      return this\n    }.apply(obj1, [obj2])\n  }\n}\n"],"names":["InfoBox","options","this","extend","google","maps","OverlayView","content","disableAutoPan","maxWidth","pixelOffset","Size","position","LatLng","zIndex","boxClass","boxStyle","closeBoxMargin","closeBoxURL","infoBoxClearance","visible","isHidden","alignBottom","pane","enableEventPropagation","div","closeListener","moveListener","mapListener","contextListener","eventListeners","fixedWidthSet","prototype","createInfoBoxDiv","_this","cancelHandler","event","cancelBubble","stopPropagation","document","createElement","setBoxStyle","innerHTML","getCloseBoxImg","appendChild","panes","getPanes","addClickHandler","style","width","offsetWidth","bw","getBoxWidths","left","right","panBox","events","i","length","push","addListener","cursor","returnValue","preventDefault","trigger","img","firstChild","closeBox","getCloseClickHandler","close","disablePan","map","getMap","Map","xOffset","yOffset","bounds","getBounds","contains","setCenter","mapDiv","getDiv","mapWidth","mapHeight","offsetHeight","iwOffsetX","iwOffsetY","height","iwWidth","iwHeight","padX","padY","pixPosition","getProjection","fromLatLngToContainerPixel","x","y","panBy","className","cssText","Object","hasOwnProperty","call","webkitTransform","opacity","parseFloat","msFilter","filter","visibility","overflow","top","bottom","defaultView","ownerDocument","computedStyle","getComputedStyle","parseInt","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","documentElement","currentStyle","onRemove","parentNode","removeChild","draw","fromLatLngToDivPixel","setOptions","setContent","setPosition","setZIndex","removeListener","latLng","setVisible","isVisible","index","getContent","getPosition","getZIndex","getVisible","show","hide","open","anchor","setMap","obj1","obj2","object","property","set","get","apply"],"mappings":"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"}