{"version":3,"file":"cjs.min.js","sources":["../src/ClusterIcon.tsx","../src/Cluster.tsx","../src/Clusterer.tsx"],"sourcesContent":["/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\n\nimport { ClusterIconStyle, ClusterIconInfo } from './types'\n\nexport class ClusterIcon {\n  cluster: Cluster\n  className: string\n  clusterClassName: string\n  styles: ClusterIconStyle[]\n  center: google.maps.LatLng | undefined\n  div: HTMLDivElement | null\n  sums: ClusterIconInfo | null\n  visible: boolean\n  url: string\n  height: number\n  width: number\n  anchorText: number[]\n  anchorIcon: number[]\n  textColor: string\n  textSize: number\n  textDecoration: string\n  fontWeight: string\n  fontStyle: string\n  fontFamily: string\n  backgroundPosition: string\n  cMouseDownInCluster: boolean | null\n  cDraggingMapByCluster: boolean | null\n  timeOut: number | null\n\n  boundsChangedListener: google.maps.MapsEventListener | null\n\n  constructor(cluster: Cluster, styles: ClusterIconStyle[]) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView)\n\n    this.cluster = cluster\n\n    this.clusterClassName = this.cluster.getClusterer().getClusterClass()\n\n    this.className = this.clusterClassName\n\n    this.styles = styles\n\n    this.center = undefined\n\n    this.div = null\n\n    this.sums = null\n\n    this.visible = false\n\n    this.boundsChangedListener = null\n\n    this.url = ''\n\n    this.height = 0\n    this.width = 0\n\n    this.anchorText = [0, 0]\n    this.anchorIcon = [0, 0]\n\n    this.textColor = 'black'\n    this.textSize = 11\n    this.textDecoration = 'none'\n    this.fontWeight = 'bold'\n    this.fontStyle = 'normal'\n    this.fontFamily = 'Arial,sans-serif'\n\n    this.backgroundPosition = '0 0'\n\n    this.cMouseDownInCluster = null\n    this.cDraggingMapByCluster = null\n    this.timeOut = null;\n\n\n    (this as unknown as google.maps.OverlayView).setMap(cluster.getMap()) // Note: this causes onAdd to be called\n  }\n\n  onBoundsChanged() {\n    this.cDraggingMapByCluster = this.cMouseDownInCluster\n  }\n\n  onMouseDown() {\n    this.cMouseDownInCluster = true\n\n    this.cDraggingMapByCluster = false\n  }\n\n  onClick(event: Event) {\n    this.cMouseDownInCluster = false\n\n    if (!this.cDraggingMapByCluster) {\n      const markerClusterer = this.cluster.getClusterer()\n\n      /**\n       * This event is fired when a cluster marker is clicked.\n       * @name MarkerClusterer#click\n       * @param {Cluster} c The cluster that was clicked.\n       * @event\n       */\n      google.maps.event.trigger(markerClusterer, 'click', this.cluster)\n      google.maps.event.trigger(markerClusterer, 'clusterclick', this.cluster) // deprecated name\n\n      // The default click handler follows. Disable it by setting\n      // the zoomOnClick property to false.\n      if (markerClusterer.getZoomOnClick()) {\n        // Zoom into the cluster.\n        const maxZoom = markerClusterer.getMaxZoom()\n\n        const bounds = this.cluster.getBounds()\n\n        const map = (markerClusterer as unknown as google.maps.OverlayView).getMap()\n\n        if (map !== null && 'fitBounds' in map) {\n          map.fitBounds(bounds)\n        }\n\n\n        // There is a fix for Issue 170 here:\n        this.timeOut = window.setTimeout(() => {\n          const map = (markerClusterer as unknown as google.maps.OverlayView).getMap()\n\n          if (map !== null) {\n            if ('fitBounds' in map) {\n              map.fitBounds(bounds)\n            }\n\n            const zoom = map.getZoom() || 0\n\n            // Don't zoom beyond the max zoom level\n            if (\n              maxZoom !== null &&\n              zoom > maxZoom\n            ) {\n              map.setZoom(maxZoom + 1)\n            }\n          }\n        }, 100)\n      }\n\n      // Prevent event propagation to the map:\n      event.cancelBubble = true\n\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n    }\n  }\n\n  onMouseOver() {\n    /**\n     * This event is fired when the mouse moves over a cluster marker.\n     * @name MarkerClusterer#mouseover\n     * @param {Cluster} c The cluster that the mouse moved over.\n     * @event\n     */\n    google.maps.event.trigger(\n      this.cluster.getClusterer(),\n      'mouseover',\n      this.cluster\n    )\n  }\n\n  onMouseOut() {\n    /**\n     * This event is fired when the mouse moves out of a cluster marker.\n     * @name MarkerClusterer#mouseout\n     * @param {Cluster} c The cluster that the mouse moved out of.\n     * @event\n     */\n    google.maps.event.trigger(\n      this.cluster.getClusterer(),\n      'mouseout',\n      this.cluster\n    )\n  }\n\n  onAdd() {\n    this.div = document.createElement('div')\n\n    this.div.className = this.className\n\n    if (this.visible) {\n      this.show()\n    }\n\n    ;(this as unknown as google.maps.OverlayView).getPanes()?.overlayMouseTarget.appendChild(this.div)\n\n    const map = (this as unknown as google.maps.OverlayView).getMap()\n\n    if (map !== null) {\n      // Fix for Issue 157\n      this.boundsChangedListener = google.maps.event.addListener(\n        map,\n        'bounds_changed',\n        this.onBoundsChanged\n      )\n\n      this.div.addEventListener('mousedown', this.onMouseDown)\n\n      this.div.addEventListener('click', this.onClick)\n\n      this.div.addEventListener('mouseover', this.onMouseOver)\n\n      this.div.addEventListener('mouseout', this.onMouseOut)\n    }\n  }\n\n  onRemove() {\n    if (this.div && this.div.parentNode) {\n      this.hide()\n\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener)\n      }\n\n      this.div.removeEventListener('mousedown', this.onMouseDown)\n\n      this.div.removeEventListener('click', this.onClick)\n\n      this.div.removeEventListener('mouseover', this.onMouseOver)\n\n      this.div.removeEventListener('mouseout', this.onMouseOut)\n\n      this.div.parentNode.removeChild(this.div)\n\n      if (this.timeOut !== null) {\n        window.clearTimeout(this.timeOut)\n\n        this.timeOut = null\n      }\n\n      this.div = null\n    }\n  }\n\n  draw() {\n    if (this.visible && this.div !== null && this.center) {\n      const pos = this.getPosFromLatLng(this.center)\n\n      this.div.style.top = pos !== null ? `${pos.y}px` : '0'\n      this.div.style.left = pos !== null ? `${pos.x}px` : '0'\n    }\n  }\n\n  hide() {\n    if (this.div) {\n      this.div.style.display = 'none'\n    }\n\n    this.visible = false\n  }\n\n  show() {\n    if (this.div && this.center) {\n      let divTitle = ''\n\n      // NOTE: values must be specified in px units\n      const bp = this.backgroundPosition.split(' ')\n\n      const spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10)\n      const spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10)\n\n      const pos = this.getPosFromLatLng(this.center)\n\n      if (\n        this.sums === null ||\n        typeof this.sums.title === 'undefined' ||\n        this.sums.title === ''\n      ) {\n        divTitle = this.cluster.getClusterer().getTitle()\n      } else {\n        divTitle = this.sums.title\n      }\n\n      this.div.style.cursor = 'pointer'\n      this.div.style.position = 'absolute'\n\n      this.div.style.top = pos !== null ? `${pos.y}px` : '0'\n      this.div.style.left = pos !== null ? `${pos.x}px` : '0'\n\n      this.div.style.width = `${this.width}px`\n      this.div.style.height = `${this.height}px`\n\n      const img = document.createElement('img')\n\n      img.alt = divTitle\n      img.src = this.url\n      img.style.position = 'absolute'\n      img.style.top = `${spriteV}px`\n      img.style.left = `${spriteH}px`\n\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img.style.clip = `rect(-${spriteV}px, -${spriteH + this.width}px, -${\n          spriteV + this.height\n        }, -${spriteH})`\n      }\n\n      const textElm = document.createElement('div')\n\n      textElm.style.position = 'absolute'\n      textElm.style.top = `${this.anchorText[0]}px`\n      textElm.style.left = `${this.anchorText[1]}px`\n      textElm.style.color = this.textColor\n      textElm.style.fontSize = `${this.textSize}px`\n      textElm.style.fontFamily = this.fontFamily\n      textElm.style.fontWeight = this.fontWeight\n      textElm.style.fontStyle = this.fontStyle\n      textElm.style.textDecoration = this.textDecoration\n      textElm.style.textAlign = 'center'\n      textElm.style.width = `${this.width}px`\n      textElm.style.lineHeight = `${this.height}px`\n      textElm.innerText = `${this.sums?.text}`\n\n      this.div.innerHTML = ''\n\n      this.div.appendChild(img)\n      this.div.appendChild(textElm)\n\n      this.div.title = divTitle\n\n      this.div.style.display = ''\n    }\n\n    this.visible = true\n  }\n\n  useStyle(sums: ClusterIconInfo) {\n    this.sums = sums\n\n    const styles = this.cluster.getClusterer().getStyles()\n\n    const style =\n      styles[Math.min(styles.length - 1, Math.max(0, sums.index - 1))]\n\n    this.url = style.url\n    this.height = style.height\n    this.width = style.width\n\n    if (style.className)\n      this.className = `${this.clusterClassName} ${style.className}`\n\n    this.anchorText = style.anchorText || [0, 0]\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2]\n\n    this.textColor = style.textColor || 'black'\n\n    this.textSize = style.textSize || 11\n\n    this.textDecoration = style.textDecoration || 'none'\n\n    this.fontWeight = style.fontWeight || 'bold'\n\n    this.fontStyle = style.fontStyle || 'normal'\n\n    this.fontFamily = style.fontFamily || 'Arial,sans-serif'\n\n    this.backgroundPosition = style.backgroundPosition || '0 0'\n  }\n\n  setCenter(center: google.maps.LatLng) {\n    this.center = center\n  }\n\n  getPosFromLatLng(latlng: google.maps.LatLng): google.maps.Point | null {\n    const pos = (this as unknown as google.maps.OverlayView).getProjection().fromLatLngToDivPixel(latlng)\n\n    if (pos !== null) {\n      pos.x -= this.anchorIcon[1]\n\n      pos.y -= this.anchorIcon[0]\n    }\n\n    return pos\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Clusterer } from './Clusterer'\n\nimport { ClusterIcon } from './ClusterIcon'\n\nimport { MarkerExtended } from './types'\n\nexport class Cluster {\n  markerClusterer: Clusterer\n  map: google.maps.Map | google.maps.StreetViewPanorama | null\n  gridSize: number\n  minClusterSize: number\n  averageCenter: boolean\n  markers: MarkerExtended[]\n  center: google.maps.LatLng | undefined\n  bounds: google.maps.LatLngBounds | null\n  clusterIcon: ClusterIcon\n\n  constructor(markerClusterer: Clusterer) {\n    this.markerClusterer = markerClusterer\n\n    this.map = (this.markerClusterer as unknown as google.maps.OverlayView).getMap()\n\n    this.gridSize = this.markerClusterer.getGridSize()\n\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize()\n\n    this.averageCenter = this.markerClusterer.getAverageCenter()\n\n    this.markers = []\n\n    this.center = undefined\n\n    this.bounds = null\n\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles())\n  }\n\n  getSize(): number {\n    return this.markers.length\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getCenter(): google.maps.LatLng | undefined {\n    return this.center\n  }\n\n  getMap(): google.maps.Map | google.maps.StreetViewPanorama | null {\n    return this.map\n  }\n\n  getClusterer(): Clusterer {\n    return this.markerClusterer\n  }\n\n  getBounds(): google.maps.LatLngBounds {\n    const bounds = new google.maps.LatLngBounds(this.center, this.center)\n\n    const markers = this.getMarkers()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    return bounds\n  }\n\n  remove() {\n    (this.clusterIcon as unknown as google.maps.OverlayView).setMap(null)\n\n    this.markers = []\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    delete this.markers\n  }\n\n  addMarker(marker: MarkerExtended): boolean {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false\n    }\n\n    if (!this.center) {\n      const position = marker.getPosition()\n\n      if (position) {\n        this.center = position\n\n        this.calculateBounds()\n      }\n    } else {\n      if (this.averageCenter) {\n        const position = marker.getPosition()\n\n        if (position) {\n          const length = this.markers.length + 1\n\n          this.center = new google.maps.LatLng(\n            (this.center.lat() * (length - 1) + position.lat()) / length,\n            (this.center.lng() * (length - 1) + position.lng()) / length\n          )\n\n          this.calculateBounds()\n        }\n      }\n    }\n\n    marker.isAdded = true\n\n    this.markers.push(marker)\n\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    const zoom = this.map?.getZoom()\n\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (let i = 0; i < mCount; i++) {\n        this.markers[i].setMap(null)\n      }\n    } else {\n      marker.setMap(null)\n    }\n\n    return true\n  }\n\n  isMarkerInClusterBounds(marker: MarkerExtended): boolean {\n    if (this.bounds !== null) {\n      const position = marker.getPosition()\n\n      if (position) {\n        return this.bounds.contains(position)\n      }\n    }\n\n    return false\n  }\n\n  calculateBounds() {\n    this.bounds = this.markerClusterer.getExtendedBounds(\n      new google.maps.LatLngBounds(this.center, this.center)\n    )\n  }\n\n  updateIcon() {\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    const zoom = this.map?.getZoom()\n\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center)\n    }\n\n    this.clusterIcon.useStyle(\n      this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length)\n    )\n\n    this.clusterIcon.show()\n  }\n\n  isMarkerAlreadyAdded(marker: MarkerExtended): boolean {\n    if (this.markers.includes) {\n      return this.markers.includes(marker)\n    }\n\n    for (let i = 0; i < this.markers.length; i++) {\n      if (marker === this.markers[i]) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\nimport { ClusterIcon } from './ClusterIcon'\n\nimport {\n  MarkerExtended,\n  ClustererOptions,\n  ClusterIconStyle,\n  TCalculator,\n  ClusterIconInfo,\n} from './types'\n\n/**\n * Supports up to 9007199254740991 (Number.MAX_SAFE_INTEGER) markers\n * which is not a problem as max array length is 4294967296 (2**32)\n */\nconst CALCULATOR = function CALCULATOR(\n  markers: MarkerExtended[],\n  numStyles: number\n): ClusterIconInfo {\n  const count = markers.length\n\n  const numberOfDigits = count.toString().length\n\n  const index = Math.min(numberOfDigits, numStyles)\n\n  return {\n    text: count.toString(),\n    index,\n    title: '',\n  }\n}\n\nconst BATCH_SIZE = 2000\n\nconst BATCH_SIZE_IE = 500\n\nconst IMAGE_PATH =\n  'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'\n\nconst IMAGE_EXTENSION = 'png'\n\nconst IMAGE_SIZES = [53, 56, 66, 78, 90]\n\nconst CLUSTERER_CLASS = 'cluster'\n\nexport class Clusterer {\n  markers: MarkerExtended[]\n  clusters: Cluster[]\n  listeners: google.maps.MapsEventListener[]\n  activeMap: google.maps.Map | google.maps.StreetViewPanorama | null\n  ready: boolean\n  gridSize: number\n  minClusterSize: number\n  maxZoom: number | null\n  styles: ClusterIconStyle[]\n  title: string\n  zoomOnClick: boolean\n  averageCenter: boolean\n  ignoreHidden: boolean\n  enableRetinaIcons: boolean\n  imagePath: string\n  imageExtension: string\n  imageSizes: number[]\n  calculator: TCalculator\n  batchSize: number\n  batchSizeIE: number\n  clusterClass: string\n  timerRefStatic: number | null\n\n  constructor(\n    map: google.maps.Map,\n    optMarkers: MarkerExtended[] = [],\n    optOptions: ClustererOptions = {}\n  ) {\n    this.extend(Clusterer, google.maps.OverlayView)\n\n    this.markers = []\n    this.clusters = []\n    this.listeners = []\n    this.activeMap = null\n    this.ready = false\n    this.gridSize = optOptions.gridSize || 60\n    this.minClusterSize = optOptions.minimumClusterSize || 2\n    this.maxZoom = optOptions.maxZoom || null\n    this.styles = optOptions.styles || []\n\n    this.title = optOptions.title || ''\n\n    this.zoomOnClick = true\n\n    if (optOptions.zoomOnClick !== undefined) {\n      this.zoomOnClick = optOptions.zoomOnClick\n    }\n\n    this.averageCenter = false\n\n    if (optOptions.averageCenter !== undefined) {\n      this.averageCenter = optOptions.averageCenter\n    }\n\n    this.ignoreHidden = false\n\n    if (optOptions.ignoreHidden !== undefined) {\n      this.ignoreHidden = optOptions.ignoreHidden\n    }\n\n    this.enableRetinaIcons = false\n\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons\n    }\n    this.imagePath = optOptions.imagePath || IMAGE_PATH\n\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION\n\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES\n\n    this.calculator = optOptions.calculator || CALCULATOR\n\n    this.batchSize = optOptions.batchSize || BATCH_SIZE\n\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE\n\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS\n\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE\n    }\n\n    this.timerRefStatic = null\n\n    this.setupStyles()\n\n    this.addMarkers(optMarkers, true);\n\n    (this as unknown as google.maps.OverlayView).setMap(map) // Note: this causes onAdd to be called\n  }\n\n  onZoomChanged() {\n    this.resetViewport(false)\n\n    // Workaround for this Google bug: when map is at level 0 and \"-\" of\n    // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n    // the map doesn't zoom out any further. In this situation, no \"idle\"\n    // event is triggered so the cluster markers that have been removed\n    // do not get redrawn. Same goes for a zoom in at maxZoom.\n    if (\n      (this as unknown as google.maps.OverlayView).getMap()?.getZoom() === ((this as unknown as google.maps.OverlayView).get('minZoom') || 0) ||\n      (this as unknown as google.maps.OverlayView).getMap()?.getZoom() === (this as unknown as google.maps.OverlayView).get('maxZoom')\n    ) {\n      google.maps.event.trigger(this, 'idle')\n    }\n  }\n\n  onIdle() {\n    this.redraw()\n  }\n\n  onAdd() {\n    const map = (this as unknown as google.maps.OverlayView).getMap()\n\n    this.activeMap = map\n\n    this.ready = true\n\n    this.repaint()\n\n    if (map !== null) {\n      // Add the map event listeners\n      this.listeners = [\n        google.maps.event.addListener(\n          map,\n          'zoom_changed',\n          this.onZoomChanged\n        ),\n        google.maps.event.addListener(\n          map,\n          'idle',\n          this.onIdle\n        ),\n      ]\n    }\n  }\n\n  onRemove() {\n    // Put all the managed markers back on the map:\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].getMap() !== this.activeMap) {\n        this.markers[i].setMap(this.activeMap)\n      }\n    }\n\n    // Remove all clusters:\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Remove map event listeners:\n    for (let i = 0; i < this.listeners.length; i++) {\n      google.maps.event.removeListener(this.listeners[i])\n    }\n\n    this.listeners = []\n\n    this.activeMap = null\n\n    this.ready = false\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  draw() {}\n\n  setupStyles() {\n    if (this.styles.length > 0) {\n      return\n    }\n\n    for (let i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: this.imagePath + (i + 1) + '.' + this.imageExtension,\n        height: this.imageSizes[i],\n        width: this.imageSizes[i],\n      })\n    }\n  }\n\n  fitMapToMarkers() {\n    const markers = this.getMarkers()\n\n    const bounds = new google.maps.LatLngBounds()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    const map = (this as unknown as google.maps.OverlayView).getMap()\n\n    if (map !== null && 'fitBounds' in map) {\n      map.fitBounds(bounds)\n    }\n\n  }\n\n  getGridSize(): number {\n    return this.gridSize\n  }\n\n  setGridSize(gridSize: number) {\n    this.gridSize = gridSize\n  }\n\n  getMinimumClusterSize(): number {\n    return this.minClusterSize\n  }\n\n  setMinimumClusterSize(minimumClusterSize: number) {\n    this.minClusterSize = minimumClusterSize\n  }\n\n  getMaxZoom(): number | null {\n    return this.maxZoom\n  }\n\n  setMaxZoom(maxZoom: number) {\n    this.maxZoom = maxZoom\n  }\n\n  getStyles(): ClusterIconStyle[] {\n    return this.styles\n  }\n\n  setStyles(styles: ClusterIconStyle[]) {\n    this.styles = styles\n  }\n\n  getTitle(): string {\n    return this.title\n  }\n\n  setTitle(title: string) {\n    this.title = title\n  }\n\n  getZoomOnClick(): boolean {\n    return this.zoomOnClick\n  }\n\n  setZoomOnClick(zoomOnClick: boolean) {\n    this.zoomOnClick = zoomOnClick\n  }\n\n  getAverageCenter(): boolean {\n    return this.averageCenter\n  }\n\n  setAverageCenter(averageCenter: boolean) {\n    this.averageCenter = averageCenter\n  }\n\n  getIgnoreHidden(): boolean {\n    return this.ignoreHidden\n  }\n\n  setIgnoreHidden(ignoreHidden: boolean) {\n    this.ignoreHidden = ignoreHidden\n  }\n\n  getEnableRetinaIcons(): boolean {\n    return this.enableRetinaIcons\n  }\n\n  setEnableRetinaIcons(enableRetinaIcons: boolean) {\n    this.enableRetinaIcons = enableRetinaIcons\n  }\n\n  getImageExtension(): string {\n    return this.imageExtension\n  }\n\n  setImageExtension(imageExtension: string) {\n    this.imageExtension = imageExtension\n  }\n\n  getImagePath(): string {\n    return this.imagePath\n  }\n\n  setImagePath(imagePath: string) {\n    this.imagePath = imagePath\n  }\n\n  getImageSizes(): number[] {\n    return this.imageSizes\n  }\n\n  setImageSizes(imageSizes: number[]) {\n    this.imageSizes = imageSizes\n  }\n\n  getCalculator(): TCalculator {\n    return this.calculator\n  }\n\n  setCalculator(calculator: TCalculator) {\n    this.calculator = calculator\n  }\n\n  getBatchSizeIE(): number {\n    return this.batchSizeIE\n  }\n\n  setBatchSizeIE(batchSizeIE: number) {\n    this.batchSizeIE = batchSizeIE\n  }\n\n  getClusterClass(): string {\n    return this.clusterClass\n  }\n\n  setClusterClass(clusterClass: string) {\n    this.clusterClass = clusterClass\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getTotalMarkers(): number {\n    return this.markers.length\n  }\n\n  getClusters(): Cluster[] {\n    return this.clusters\n  }\n\n  getTotalClusters(): number {\n    return this.clusters.length\n  }\n\n  addMarker(marker: MarkerExtended, optNoDraw: boolean) {\n    this.pushMarkerTo(marker)\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  addMarkers(markers: MarkerExtended[], optNoDraw: boolean) {\n    for (const key in markers) {\n      if (Object.prototype.hasOwnProperty.call(markers, key)) {\n        this.pushMarkerTo(markers[key])\n      }\n    }\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  pushMarkerTo(marker: MarkerExtended) {\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\n    if (marker.getDraggable()) {\n      google.maps.event.addListener(marker, 'dragend', () => {\n        if (this.ready) {\n          marker.isAdded = false\n\n          this.repaint()\n        }\n      })\n    }\n\n    marker.isAdded = false\n\n    this.markers.push(marker)\n  }\n\n  removeMarker_(marker: MarkerExtended): boolean {\n    let index = -1\n\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker)\n    } else {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i\n\n          break\n        }\n      }\n    }\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false\n    }\n\n    marker.setMap(null)\n\n    this.markers.splice(index, 1) // Remove the marker from the list of managed markers\n\n    return true\n  }\n\n  removeMarker(marker: MarkerExtended, optNoDraw: boolean): boolean {\n    const removed = this.removeMarker_(marker)\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  removeMarkers(markers: MarkerExtended[], optNoDraw: boolean): boolean {\n    let removed = false\n\n    for (let i = 0; i < markers.length; i++) {\n      removed = removed || this.removeMarker_(markers[i])\n    }\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  clearMarkers() {\n    this.resetViewport(true)\n\n    this.markers = []\n  }\n\n  repaint() {\n    const oldClusters = this.clusters.slice()\n\n    this.clusters = []\n\n    this.resetViewport(false)\n\n    this.redraw()\n\n    // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n    setTimeout(function timeout() {\n      for (let i = 0; i < oldClusters.length; i++) {\n        oldClusters[i].remove()\n      }\n    }, 0)\n  }\n\n  getExtendedBounds(bounds: google.maps.LatLngBounds): google.maps.LatLngBounds {\n    const projection = (this as unknown as google.maps.OverlayView).getProjection()\n\n    // Convert the points to pixels and the extend out by the grid size.\n    const trPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng())\n    )\n\n    if (trPix !== null) {\n      trPix.x += this.gridSize\n      trPix.y -= this.gridSize\n    }\n\n    const blPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng())\n    )\n\n    if (blPix !== null) {\n      blPix.x -= this.gridSize\n      blPix.y += this.gridSize\n    }\n\n\n    // Extend the bounds to contain the new bounds.\n    if (trPix !== null) {\n      // Convert the pixel points back to LatLng nw\n      const point1 = projection.fromDivPixelToLatLng(trPix)\n\n      if (point1 !== null) {\n        bounds.extend(point1)\n      }\n    }\n\n    if (blPix !== null) {\n      // Convert the pixel points back to LatLng sw\n      const point2 =  projection.fromDivPixelToLatLng(blPix)\n\n      if (point2 !== null) {\n        bounds.extend(\n          point2\n        )\n      }\n    }\n\n\n    return bounds\n  }\n\n  redraw() {\n    // Redraws all the clusters.\n    this.createClusters(0)\n  }\n\n  resetViewport(optHide: boolean) {\n    // Remove all the clusters\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Reset the markers to not be added and to be removed from the map.\n    for (let i = 0; i < this.markers.length; i++) {\n      const marker = this.markers[i]\n\n      marker.isAdded = false\n\n      if (optHide) {\n        marker.setMap(null)\n      }\n    }\n  }\n\n  distanceBetweenPoints(p1: google.maps.LatLng, p2: google.maps.LatLng): number {\n    const R = 6371 // Radius of the Earth in km\n\n    const dLat = ((p2.lat() - p1.lat()) * Math.PI) / 180\n    const dLon = ((p2.lng() - p1.lng()) * Math.PI) / 180\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos((p1.lat() * Math.PI) / 180) *\n        Math.cos((p2.lat() * Math.PI) / 180) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2)\n\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)))\n  }\n\n  isMarkerInBounds(marker: MarkerExtended, bounds: google.maps.LatLngBounds): boolean {\n    const position = marker.getPosition()\n\n    if (position) {\n      return bounds.contains(position)\n    }\n\n    return false\n  }\n\n  addToClosestCluster(marker: MarkerExtended) {\n    let cluster\n\n    let distance = 40000 // Some large number\n\n    let clusterToAddTo = null\n\n    for (let i = 0; i < this.clusters.length; i++) {\n      cluster = this.clusters[i]\n\n      const center = cluster.getCenter()\n\n      const position = marker.getPosition()\n\n      if (center && position) {\n        const d = this.distanceBetweenPoints(center, position)\n\n        if (d < distance) {\n          distance = d\n\n          clusterToAddTo = cluster\n        }\n      }\n    }\n\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker)\n    } else {\n      cluster = new Cluster(this)\n\n      cluster.addMarker(marker)\n\n      this.clusters.push(cluster)\n    }\n  }\n\n  createClusters(iFirst: number) {\n    if (!this.ready) {\n      return\n    }\n\n    // Cancel previous batch processing if we're working on the first batch:\n    if (iFirst === 0) {\n      /**\n       * This event is fired when the <code>Clusterer</code> begins\n       *  clustering markers.\n       * @name Clusterer#clusteringbegin\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringbegin', this)\n\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic)\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        delete this.timerRefStatic\n      }\n    }\n\n    const map = (this as unknown as google.maps.OverlayView).getMap()\n\n    const bounds = map !== null && 'getBounds' in map ? map.getBounds() : null\n\n    const zoom =  map?.getZoom() || 0\n    // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n    const mapBounds = zoom > 3\n        ? new google.maps.LatLngBounds(\n            bounds?.getSouthWest(),\n            bounds?.getNorthEast()\n          )\n        : new google.maps.LatLngBounds(\n            new google.maps.LatLng(85.02070771743472, -178.48388434375),\n            new google.maps.LatLng(-85.08136444384544, 178.00048865625)\n          )\n\n    const extendedMapBounds = this.getExtendedBounds(mapBounds)\n\n    const iLast = Math.min(iFirst + this.batchSize, this.markers.length)\n\n    for (let i = iFirst; i < iLast; i++) {\n      const marker = this.markers[i]\n\n      if (!marker.isAdded && this.isMarkerInBounds(marker, extendedMapBounds) && (!this.ignoreHidden || (this.ignoreHidden && marker.getVisible()))) {\n        this.addToClosestCluster(marker)\n      }\n    }\n\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout(\n        () => {\n          this.createClusters(iLast)\n        },\n        0\n      )\n    } else {\n      this.timerRefStatic = null\n\n      /**\n       * This event is fired when the <code>Clusterer</code> stops\n       *  clustering markers.\n       * @name Clusterer#clusteringend\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringend', this)\n\n      for (let i = 0; i < this.clusters.length; i++) {\n        this.clusters[i].updateIcon()\n      }\n    }\n  }\n\n  extend<A extends typeof ClusterIcon | typeof Clusterer>(obj1: A, obj2: typeof google.maps.OverlayView): A {\n    return function applyExtend(this: A, object: typeof google.maps.OverlayView): A {\n      for (const property in object.prototype) {\n        (this.prototype as unknown as google.maps.OverlayView).set(property, object.prototype.get(property))\n      }\n\n      return this\n    }.apply<A, [typeof google.maps.OverlayView], any>(obj1, [obj2])\n  }\n}\n"],"names":["ClusterIcon","cluster","styles","getClusterer","extend","google","maps","OverlayView","this","clusterClassName","getClusterClass","className","center","undefined","div","sums","visible","boundsChangedListener","url","height","width","anchorText","anchorIcon","textColor","textSize","textDecoration","fontWeight","fontStyle","fontFamily","backgroundPosition","cMouseDownInCluster","cDraggingMapByCluster","timeOut","setMap","getMap","prototype","onBoundsChanged","onMouseDown","onClick","event","markerClusterer_1","trigger","getZoomOnClick","maxZoom_1","getMaxZoom","bounds_1","getBounds","map","fitBounds","window","setTimeout","zoom","getZoom","setZoom","cancelBubble","stopPropagation","onMouseOver","onMouseOut","onAdd","document","createElement","show","_a","getPanes","overlayMouseTarget","appendChild","addListener","addEventListener","onRemove","parentNode","hide","removeListener","removeEventListener","removeChild","clearTimeout","draw","pos","getPosFromLatLng","style","top","concat","y","left","x","display","divTitle","bp","split","spriteH","parseInt","replace","spriteV","title","getTitle","cursor","position","img","alt","src","enableRetinaIcons","clip","textElm","color","fontSize","textAlign","lineHeight","innerText","text","innerHTML","useStyle","getStyles","Math","min","length","max","index","setCenter","latlng","getProjection","fromLatLngToDivPixel","Cluster","markerClusterer","gridSize","getGridSize","minClusterSize","getMinimumClusterSize","averageCenter","getAverageCenter","markers","bounds","clusterIcon","getSize","getMarkers","getCenter","LatLngBounds","i","getPosition","remove","addMarker","marker","isMarkerAlreadyAdded","length_1","LatLng","lat","lng","calculateBounds","isAdded","push","mCount","maxZoom","isMarkerInClusterBounds","contains","getExtendedBounds","updateIcon","getCalculator","includes","CALCULATOR","numStyles","count","numberOfDigits","toString","IMAGE_SIZES","Clusterer","optMarkers","optOptions","clusters","listeners","activeMap","ready","minimumClusterSize","zoomOnClick","ignoreHidden","imagePath","imageExtension","imageSizes","calculator","batchSize","batchSizeIE","clusterClass","navigator","userAgent","toLowerCase","indexOf","timerRefStatic","setupStyles","addMarkers","onZoomChanged","resetViewport","get","_b","onIdle","redraw","repaint","fitMapToMarkers","setGridSize","setMinimumClusterSize","setMaxZoom","setStyles","setTitle","setZoomOnClick","setAverageCenter","getIgnoreHidden","setIgnoreHidden","getEnableRetinaIcons","setEnableRetinaIcons","getImageExtension","setImageExtension","getImagePath","setImagePath","getImageSizes","setImageSizes","setCalculator","getBatchSizeIE","setBatchSizeIE","setClusterClass","getTotalMarkers","getClusters","getTotalClusters","optNoDraw","pushMarkerTo","key","Object","hasOwnProperty","call","_this","getDraggable","removeMarker_","splice","removeMarker","removed","removeMarkers","clearMarkers","oldClusters","slice","projection","trPix","getNorthEast","blPix","getSouthWest","point1","fromDivPixelToLatLng","point2","createClusters","optHide","distanceBetweenPoints","p1","p2","dLat","PI","dLon","a","sin","cos","atan2","sqrt","isMarkerInBounds","addToClosestCluster","distance","clusterToAddTo","d","iFirst","mapBounds","extendedMapBounds","iLast","getVisible","obj1","obj2","object","property","set","apply"],"mappings":"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"}